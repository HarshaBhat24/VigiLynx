import requests
import time

def scan_and_get_results(api_key, file_path):
    scan_url = "https://www.virustotal.com/api/v3/files"
    headers = {"x-apikey": api_key}

    print("Uploading file for scanning...")
    with open(file_path, "rb") as file:
        files = {"file": file}
        scan_response = requests.post(scan_url, headers=headers, files=files)

    if scan_response.status_code == 200:
        scan_result = scan_response.json()
        analysis_id = scan_result['data']['id']
        print(f"File uploaded successfully. Analysis ID: {analysis_id}")
    else:
        print("Failed to upload file:", scan_response.text)
        return

    analysis_url = f"https://www.virustotal.com/api/v3/analyses/{analysis_id}"
    while True:
        print("Fetching analysis results...")
        analysis_response = requests.get(analysis_url, headers=headers)

        if analysis_response.status_code == 200:
            analysis_result = analysis_response.json()
            status = analysis_result['data']['attributes']['status']
            
            if status == "completed":
                stats = analysis_result['data']['attributes']['stats']
                harmless = stats.get('harmless', 0)
                malicious = stats.get('malicious', 0)
                suspicious = stats.get('suspicious', 0)

                print("\n--- Analysis Results ---")
                print(f"Harmless: {harmless}")
                print(f"Malicious: {malicious}")
                print(f"Suspicious: {suspicious}")

                if malicious > 0:
                    print("Final Verdict: The file is MALICIOUS.")
                elif suspicious > 0:
                    print("Final Verdict: The file is SUSPICIOUS.")
                else:
                    print("Final Verdict: The file is CLEAN.")
                break
            else:
                print("Analysis in progress. Retrying in 10 seconds...")
                time.sleep(10)
        else:
            print("Failed to fetch analysis results:", analysis_response.text)
            break

api_key = "your_api_key"
file_path = "path_to_file"
scan_and_get_results(api_key, file_path)
